/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package app.views.users;

import app.controllers.MunicipalityController;
import app.controllers.UserController;
import app.controllers.UserRoleController;
import app.entities.Municipality;
import app.entities.User;
import app.entities.UserRole;
import helpers.ComboBox;
import helpers.Dialog;
import helpers.Log;
import java.awt.Color;
import java.util.List;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author raulsm
 */
public class UserEditJInternalFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form MunicipalityJInternalFrame
     */
    public UserEditJInternalFrame() {
        initComponents();
        jTextFieldUserId.setVisible(false);
    }

    /**
     * Load Data.
     *
     * @param user
     */
    public void loadData(User user) {
        // Traer de base de datos el listado de roles y agregar al combobox
        List<UserRole> userRoles = UserRoleController.list();
        ComboBox.fill(userRoles, jComboBoxUserRole);

        // Traer de base de datos el listado de Municipios y agregar al combobox
        List<Municipality> municipalities = MunicipalityController.list();
        ComboBox.fill(municipalities, jComboBoxMunicipality);

        setUserInfo(user);
    }

    /**
     * Set User Info.
     *
     * @param user
     */
    private void setUserInfo(User user) {
        DefaultComboBoxModel defaultComboBoxModelUserRole = (DefaultComboBoxModel) jComboBoxUserRole.getModel();
        DefaultComboBoxModel defaultComboBoxModelMunicipality = (DefaultComboBoxModel) jComboBoxMunicipality.getModel();

        // Set user role    
        defaultComboBoxModelUserRole.setSelectedItem(user.getUserRole());

        // Set municipality
        defaultComboBoxModelMunicipality.setSelectedItem(user.getMunicipality());

        jTextFieldUserId.setText(String.valueOf(user.getId()));
        jTextFieldUserLogin.setText(user.getLogin());
        jPasswordFieldUserPassword.setText(user.getPassword());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonUserUpdate = new javax.swing.JButton();
        jLabelUserMunicipality = new javax.swing.JLabel();
        jLabelUserRole = new javax.swing.JLabel();
        jPasswordFieldUserPassword = new javax.swing.JPasswordField();
        jLabelUserPassword = new javax.swing.JLabel();
        jTextFieldUserLogin = new javax.swing.JTextField();
        jLabelUserLogin = new javax.swing.JLabel();
        jTextFieldUserId = new javax.swing.JTextField();
        jComboBoxUserRole = new javax.swing.JComboBox<>();
        jComboBoxMunicipality = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Editar Usuario");
        setToolTipText("");

        jButtonUserUpdate.setText("Actualizar");
        jButtonUserUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUserUpdateActionPerformed(evt);
            }
        });

        jLabelUserMunicipality.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        jLabelUserMunicipality.setText("Municipio usuario:");

        jLabelUserRole.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        jLabelUserRole.setText("Role usuario:");

        jPasswordFieldUserPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                enableUpdateButton(evt);
            }
        });

        jLabelUserPassword.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        jLabelUserPassword.setText("Contrase√±a usuario:");

        jTextFieldUserLogin.setToolTipText("Introducir nombre del municipio");
        jTextFieldUserLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                enableUpdateButton(evt);
            }
        });

        jLabelUserLogin.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        jLabelUserLogin.setText("Login usuario:");

        jTextFieldUserId.setEditable(false);
        jTextFieldUserId.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonUserUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
                    .addComponent(jTextFieldUserLogin)
                    .addComponent(jLabelUserLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelUserPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
                    .addComponent(jPasswordFieldUserPassword)
                    .addComponent(jLabelUserRole, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelUserMunicipality, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jComboBoxUserRole, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxMunicipality, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelUserLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldUserLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordFieldUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelUserRole)
                .addGap(5, 5, 5)
                .addComponent(jComboBoxUserRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelUserMunicipality, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxMunicipality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jTextFieldUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonUserUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("unused")
    private void jButtonUserUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUserUpdateActionPerformed
        try {
            if (!validateInputs()) {
                throw new Exception("Inputs fieds are invalid.");
            }

            int id = Integer.parseInt(jTextFieldUserId.getText());
            String login = getInputLogin();
            String password = getInputPassword();
            int roleId = getInputUserRole().getId();
            int municipalityId = getInputMunicipality().getId();

            // User update
            User user = new User(id, login, password, roleId, municipalityId);
            UserController.update(id, user);

            Dialog.info("Usuario actualizado correctamente", "Info");

            cleanInputs();
        } catch (Exception e) {
            Log.error(e);
            Dialog.error(e.getMessage(), "Error actualiazdno usuario");
        }
    }//GEN-LAST:event_jButtonUserUpdateActionPerformed

    /**
     * Enable Update Button.
     *
     * @param evt
     */
    @SuppressWarnings("unused")
    private void enableUpdateButton(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enableUpdateButton
        try {
            jButtonUserUpdate.setEnabled(validateInputs());
        } catch (Exception e) {
            Log.error(e);
        }
    }//GEN-LAST:event_enableUpdateButton

    /**
     * Clean Inputs.
     */
    private void cleanInputs() {
        jTextFieldUserId.setText("");
        jTextFieldUserLogin.setText("");
        jPasswordFieldUserPassword.setText("");
        jComboBoxUserRole.setSelectedIndex(0);
        jComboBoxMunicipality.setSelectedIndex(0);
        validateInputs();
    }

    /**
     * Validate Inputs.
     *
     * @return True if inputs are valid
     */
    private Boolean validateInputs() {
        return validateInputLogin() && validateInputPassword();
    }

    /**
     * Validate Input Login.
     *
     * @return
     */
    private Boolean validateInputLogin() {
        String name = getInputLogin();
        Boolean isValid = name.length() >= 1 && name.length() <= 10;

        if (isValid || name.length() == 0) {
            jTextFieldUserLogin.setBackground(Color.white);
        } else {
            jTextFieldUserLogin.setBackground(Color.orange);
        }

        return isValid;
    }

    /**
     * Validate Input Password.
     *
     * @return
     */
    private Boolean validateInputPassword() {
        String password = getInputPassword();
        Boolean isValid = password.length() >= 4 && password.length() <= 8;

        if (isValid || password.length() == 0) {
            jPasswordFieldUserPassword.setBackground(Color.white);
        } else {
            jPasswordFieldUserPassword.setBackground(Color.orange);
        }

        return isValid;
    }

    /**
     * Get Input Login.
     *
     * @return Input Name
     */
    private String getInputLogin() {
        return jTextFieldUserLogin.getText();
    }

    /**
     * Get Input Password.
     *
     * @return Input Password.
     */
    private String getInputPassword() {
        return String.valueOf(jPasswordFieldUserPassword.getPassword());
    }

    /**
     * Get Input User Role.
     *
     * @return Input User Role.
     */
    private UserRole getInputUserRole() {
        return (UserRole) jComboBoxUserRole.getSelectedItem();
    }

    /**
     * Get Input Munipality.
     *
     * @return Input Munipality.
     */
    private Municipality getInputMunicipality() {
        return (Municipality) jComboBoxMunicipality.getSelectedItem();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonUserUpdate;
    private javax.swing.JComboBox<String> jComboBoxMunicipality;
    private javax.swing.JComboBox<String> jComboBoxUserRole;
    private javax.swing.JLabel jLabelUserLogin;
    private javax.swing.JLabel jLabelUserMunicipality;
    private javax.swing.JLabel jLabelUserPassword;
    private javax.swing.JLabel jLabelUserRole;
    private javax.swing.JPasswordField jPasswordFieldUserPassword;
    private javax.swing.JTextField jTextFieldUserId;
    private javax.swing.JTextField jTextFieldUserLogin;
    // End of variables declaration//GEN-END:variables
}
